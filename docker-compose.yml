version: '3.8'

services:
  sql-server:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${SQL_PASSWORD}
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqldata:/var/opt/mssql
    networks:
      - backend-network
    healthcheck:
      test: ["CMD-SHELL", "timeout 10s bash -c 'until printf \"\" 2>>/dev/null >>/dev/tcp/localhost/1433; do sleep 1; done'"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 10s

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - auth-service
    networks:
      - backend-network

  auth-service:
    image: nureternovyidaniil/pidrobitok-auth-service:latest
    ports:
      - "8082:8080"
      - "8083:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - SQL_SERVER=${SQL_SERVER}
      - SQL_DATABASE=${AUTH_DATABASE}
      - SQL_USER=${SQL_USER}
      - SQL_PASSWORD=${SQL_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ISSUER=${JWT_ISSUER}
      - JWT_AUDIENCE=${JWT_AUDIENCE}
      - JWT_TOKEN_LIFETIME=${JWT_TOKEN_LIFETIME}
    depends_on:
      sql-server:
        condition: service_healthy
    networks:
      - backend-network

  job-service:
    image: andriilavrovnure/pidrobitok-job-service:latest
    ports:
      - "8084:8080"
      - "8085:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - SQL_SERVER=${SQL_SERVER}
      - SQL_DATABASE=${JOB_DATABASE}
      - SQL_USER=${SQL_USER}
      - SQL_PASSWORD=${SQL_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ISSUER=${JWT_ISSUER}
      - JWT_AUDIENCE=${JWT_AUDIENCE}
      - JWT_TOKEN_LIFETIME=${JWT_TOKEN_LIFETIME}
    depends_on:
      sql-server:
        condition: service_healthy
    networks:
      - backend-network

  moderator-service:
    image: mykytadiachenko/pidrobitok-moderator-service:latest
    ports:
      - "8086:8080"
      - "8087:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - SQL_SERVER=${SQL_SERVER}
      - SQL_DATABASE=${MODERATOR_DATABASE}
      - SQL_USER=${SQL_USER}
      - SQL_PASSWORD=${SQL_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ISSUER=${JWT_ISSUER}
      - JWT_AUDIENCE=${JWT_AUDIENCE}
      - JWT_TOKEN_LIFETIME=${JWT_TOKEN_LIFETIME}
    depends_on:
      sql-server:
        condition: service_healthy
    networks:
      - backend-network

  frontend:
    image: yaroff/pidrobitok-front:latest
    ports:
      - "3000:5173"
    depends_on:
      auth-service:
        condition: service_started
      job-service:
        condition: service_started
      moderator-service:
        condition: service_started
    networks:
      - backend-network

networks:
  backend-network:
    driver: bridge

volumes:
  sqldata:
